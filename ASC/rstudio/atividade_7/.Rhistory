6.16755 - 3.22806
72009.72 - 71888.78
c(0..100)
rep(1, times = 5)
num(2)
number(2)
2 as number
str(2)
2
knitr::opts_chunk$set(echo = TRUE, out.width='70%', fig.align="center")
reqs <- read.table("wl-rdwr.dat", head=T)
str(reqs)
head(reqs)
reqs.diff = diff(reqs$tstamp)
head(reqs.diff)
str(reqs.diff)
#reqs$tstamp[1]
#reqs$texec = c(reqs$tstamp[1], reqs.diff)
tail(reqs)
#reqs.std <- scale(reqs[-1])
#reqs$diff = diff(reqs$tstamp)
#cbind(reqs, diff(reqs$tstamp))
reqs.split <- split(reqs, reqs$tipo)
str(reqs.split)
reqs.split$read$tipo = 1
reqs.split$read.std = scale(reqs.split$read[3])
reqs.split$write$tipo = 2
reqs.split$write.std = scale(reqs.split$write[3])
head(reqs.split$write)
head(reqs.split$write.std)
length(reqs.split$read)
length(reqs.split$write)
reqs.split$read[3]
tail(reqs.split$read)
head(reqs.split$read)
head(reqs.split$read[3])
reqs$tiponum = as.numeric(reqs$tipo)
reqs.std = scale(reqs[c('nbytes', 'tiponum', 'texec')])
knitr::opts_chunk$set(echo = TRUE, out.width='70%', fig.align="center")
reqs <- read.table("wl-rdwr.dat", head=T)
str(reqs)
head(reqs)
reqs.diff = diff(reqs$tstamp)
head(reqs.diff)
str(reqs.diff)
#reqs$tstamp[1]
reqs$texec = c(reqs$tstamp[1], reqs.diff)
head(reqs)
tail(reqs)
#reqs.std <- scale(reqs[-1])
#reqs$diff = diff(reqs$tstamp)
#cbind(reqs, diff(reqs$tstamp))
reqs.split <- split(reqs, reqs$tipo)
str(reqs.split)
reqs.split$read$tipo = 1
reqs.split$read.std = scale(reqs.split$read[c('nbytes')])
reqs.split$write$tipo = 2
reqs.split$write.std = scale(reqs.split$write[c('nbytes')])
head(reqs.split$write)
head(reqs.split$write.std)
length(reqs.split$read)
length(reqs.split$write)
# Commented to avoid execute again
library(NbClust)
#reqs.split$read.nc = NbClust(reqs.split$read.std, min.nc=2, max.nc=7, method="kmeans")
#table(reqs.split$read.nc$Best.n[1,])
## *******************************************************************
## * Among all indices:
## * 1 proposed 2 as the best number of clusters
## * 5 proposed 4 as the best number of clusters
##
##                    ***** Conclusion *****
##
## * According to the majority rule, the best number of clusters is  4
##
##
## *******************************************************************
#reqs.split$write.nc = NbClust(reqs.split$write.std, min.nc=2, max.nc=7, method="kmeans")
#table(reqs.split$write.nc$Best.n[1,])
## *******************************************************************
## * Among all indices:
## * 5 proposed 3 as the best number of clusters
## * 1 proposed 7 as the best number of clusters
##
##                    ***** Conclusion *****
##
## * According to the majority rule, the best number of clusters is  3
##
##
## *******************************************************************
# K-means
set.seed(1130)
reqs.split$read.km <- kmeans(reqs.split$read.std, 4, nstart=25)
reqs.split$read.km$centers
str(reqs.split$read)
length(reqs.split$read$nbytes)
length(reqs.split$read.km$cluster)
head(reqs.split$read.km$cluster)
head(reqs.split$read)
#reqs.split$read.km$cluster
str(reqs.split$read)
head(reqs.split$read[c('nbytes', 'texec')])
head(reqs.split$read[3])
head(reqs.split$read[4])
(reqs.split$read.group.nbytes.mean <- aggregate(reqs.split$read[c('nbytes', 'texec')], by=list(cluster=reqs.split$read.km$cluster), mean))
reqs.split$read.group.texec.sum <- aggregate(reqs.split$read[c('texec')], by=list(cluster=reqs.split$read.km$cluster), sum)
table(reqs.split$read.km$cluster)
reqs.split$write.km <- kmeans(reqs.split$write.std, 3, nstart=25)
(reqs.split$write.group.nbytes.mean <- aggregate(reqs.split$write[c('nbytes', 'texec')], by=list(cluster=reqs.split$write.km$cluster), mean))
reqs.split$write.group.texec.sum <- aggregate(reqs.split$write[c('texec')], by=list(cluster=reqs.split$write.km$cluster), sum)
table(reqs.split$write.km$cluster)
reqs.split$write.group.texec.sum$texec
# Modelo da carga de trabalho
reqs.split$read.prop <- reqs.split$read.km$size/sum(reqs.split$read.km$size)
#sum()
(reqs.split$read.wlmod <- data.frame(
texecpercentage=round(reqs.split$read.group.texec.sum$texec * 100 / sum(reqs.split$read.group.texec.sum$texec), 2),
texec=round(reqs.split$read.group.nbytes.mean$texec, 2),
nbytes=round(reqs.split$read.group.nbytes.mean$nbytes, 1),
prop=reqs.split$read.prop)
)
reqs.split$read.wlmod$prop = round(reqs.split$read.wlmod$prop * 100, 2)
head(reqs.split$read.wlmod)
reqs.split$read.wlmod.print.i = data.frame(
'Número de bytes Lidos'=reqs.split$read.wlmod$nbytes,
"Frequência%"=reqs.split$read.wlmod$prop
)
reqs.split$read.wlmod.print.ii = data.frame(
'Porcentagem do Tempo de Execução do Grupo'=reqs.split$read.wlmod$texecpercentage,
'Média Tempo de Execução (ms)'=reqs.split$read.wlmod$texec,
'Número de bytes Lidos'=reqs.split$read.wlmod$nbytes,
"Frequência%"=reqs.split$read.wlmod$prop
)
reqs.split$write.prop <- reqs.split$write.km$size/sum(reqs.split$write.km$size)
(reqs.split$write.wlmod <- data.frame(
texecpercentage=round(reqs.split$write.group.texec.sum$texec * 100 / sum(reqs.split$write.group.texec.sum$texec), 2),
texec=round(reqs.split$write.group.nbytes.mean$texec, 2),
nbytes=round(reqs.split$write.group.nbytes.mean$nbytes, 1),
"prop"=reqs.split$write.prop)
)
reqs.split$write.wlmod$prop = round(reqs.split$write.wlmod$prop * 100, 2)
#reqs.split$write.wlmod
#print(reqs.split$write.wlmod, quote = FALSE, row.names = FALSE, column.names=c('tao', 'tao'))
reqs.split$write.wlmod.print.i = data.frame(
'Número de bytes Escritos'=reqs.split$write.wlmod$nbytes,
"Frequência%"=reqs.split$write.wlmod$prop
)
reqs.split$write.wlmod.print.ii = data.frame(
'Porcentagem do Tempo de Execução do Grupo'=reqs.split$write.wlmod$texecpercentage,
'Média Tempo de Execução (ms)'=reqs.split$write.wlmod$texec,
'Número de Bytes Escritos'=reqs.split$write.wlmod$nbytes,
"Frequência%"=reqs.split$write.wlmod$prop
)
library(lemon)
#knit_print.data.frame <- lemon_print
reqs.split$read.wlmod.print.i
reqs.split$write.wlmod.print.i
#library(ggplot2)
#str(reqs.split$read)
#clusters <- factor(reqs.split$read.km$cluster)
#ggplot(data=reqs.split$read, aes(x=nbytes, color=clusters, shape=clusters))
round(reqs.split$read.group.nbytes.mean[c('cluster', 'nbytes')], 1)
round(reqs.split$write.group.nbytes.mean[c('cluster', 'nbytes')], 1)
reqs.split$read.wlmod.print.i
reqs.split$write.wlmod.print.i
reqs.split$read.wlmod.print.ii
reqs.split$write.wlmod.print.ii
reqs.std = scale(reqs[c('nbytes', 'tiponum', 'texec')])
reqs$tiponum = as.numeric(reqs$tipo)
reqs.std = scale(reqs[c('nbytes', 'tiponum', 'texec')])
reqs.nc = NbClust(reqs.std, min.nc=2, max.nc=7, method="kmeans")
reqs.split$write.prop <- reqs.split$write.km$size/sum(reqs.split$write.km$size)
reqs.split$write.prop
str(reqs.split$write.prop)
c(reqs.split$write.prop, reqs.split$read.prop)
c(reqs.split$write.prop, reqs.split$read.prop)
reqs.split$write.km$size
str(reqs.split$write.km$size)
c(reqs.split$read.km$size, reqs.split$write.km$size)
reqs.general.km$size = c(reqs.split$read.km$size, reqs.split$write.km$size)
reqs.general.km.size = c(reqs.split$read.km$size, reqs.split$write.km$size)
reqs.general.km.size = c(reqs.split$read.km$size, reqs.split$write.km$size)
reqs.general.prop <- reqs.general.km.size/sum(reqs.general.km.size)
reqs.general.prop
reqs.general.prop = round(reqs.general.prop * 100, 2)
reqs.general.prop
sum(reqs.general.prop)
rep(1, 4)
rep(tao, 4)
rep("tao", 4)
# Modelo da carga de trabalho
reqs.split$read.prop <- reqs.split$read.km$size/sum(reqs.split$read.km$size)
#sum()
(reqs.split$read.wlmod <- data.frame(
texecpercentage=round(reqs.split$read.group.texec.sum$texec * 100 / sum(reqs.split$read.group.texec.sum$texec), 2),
texec=round(reqs.split$read.group.nbytes.mean$texec, 2),
nbytes=round(reqs.split$read.group.nbytes.mean$nbytes, 1),
prop=reqs.split$read.prop)
)
reqs.split$read.wlmod$prop = round(reqs.split$read.wlmod$prop * 100, 2)
head(reqs.split$read.wlmod)
reqs.split$read.wlmod.print.i = data.frame(
'Número de bytes Lidos'=reqs.split$read.wlmod$nbytes,
"Frequência%"=reqs.split$read.wlmod$prop
)
reqs.split$read.wlmod.print.ii = data.frame(
'Porcentagem do Tempo de Execução do Grupo'=reqs.split$read.wlmod$texecpercentage,
'Média Tempo de Execução (ms)'=reqs.split$read.wlmod$texec,
'Número de bytes Lidos'=reqs.split$read.wlmod$nbytes,
"Frequência%"=reqs.split$read.wlmod$prop
)
reqs.split$write.prop <- reqs.split$write.km$size/sum(reqs.split$write.km$size)
(reqs.split$write.wlmod <- data.frame(
texecpercentage=round(reqs.split$write.group.texec.sum$texec * 100 / sum(reqs.split$write.group.texec.sum$texec), 2),
texec=round(reqs.split$write.group.nbytes.mean$texec, 2),
nbytes=round(reqs.split$write.group.nbytes.mean$nbytes, 1),
prop=reqs.split$write.prop)
)
reqs.split$write.wlmod$prop = round(reqs.split$write.wlmod$prop * 100, 2)
#reqs.split$write.wlmod
#print(reqs.split$write.wlmod, quote = FALSE, row.names = FALSE, column.names=c('tao', 'tao'))
reqs.split$write.wlmod.print.i = data.frame(
'Número de bytes Escritos'=reqs.split$write.wlmod$nbytes,
"Frequência%"=reqs.split$write.wlmod$prop
)
reqs.split$write.wlmod.print.ii = data.frame(
'Porcentagem do Tempo de Execução do Grupo'=reqs.split$write.wlmod$texecpercentage,
'Média Tempo de Execução (ms)'=reqs.split$write.wlmod$texec,
'Número de Bytes Escritos'=reqs.split$write.wlmod$nbytes,
"Frequência%"=reqs.split$write.wlmod$prop
)
reqs.general.km.size = c(reqs.split$read.km$size, reqs.split$write.km$size)
reqs.general.prop <- reqs.general.km.size/sum(reqs.general.km.size)
reqs.general.texec.sum.texec = c(reqs.split$write.group.texec.sum$texec, reqs.split$read.group.texec.sum$texec)
reqs.group.nbytes.mean.nbytes = c(reqs.split$read.group.nbytes.mean$nbytes, reqs.split$write.group.nbytes.mean$nbytes)
reqs.group.nbytes.sd.nbytes = c(reqs.split$read.group.nbytes.sd$nbytes, reqs.split$write.group.nbytes.sd$nbytes)
reqs.group.tipo=c(rep("leitura", length(reqs.split$read.group.nbytes.sd$nbytes)), rep("escrita", length(reqs.split$write.group.nbytes.sd$nbytes)))
length(reqs.split$read.group.nbytes.sd$nbytes)
reqs.general.prop = round(reqs.general.prop * 100, 2)
library(lemon)
#knit_print.data.frame <- lemon_print
reqs.general.texec.sum.texec = c(reqs.split$write.group.texec.sum$texec, reqs.split$read.group.texec.sum$texec)
reqs.general.texec.sum.texec
reqs.general.texec.sum.texec = c(reqs.split$read.group.texec.sum$texec, reqs.split$write.group.texec.sum$texec)
reqs.general.texec.sum.texec
length(reqs.general.texec.sum.texec )
length(reqs.general.texec.sum.texec)
c(1..7)
c(1..ç.7)
c(1...7)
seq(4)
seq(7)
reqs.split$write.wlmod$prop = round(reqs.split$write.wlmod$prop * 100, 2)
sum(reqs.split$write.wlmod$prop)
reqs.general.wlmod$prop = round(reqs.general.wlmod$prop * 100, 2)
reqs.general.prop = round(reqs.general.prop * 100, 2)
reqs.general.wlmod$prop = round(reqs.general.wlmod$prop * 100, 2)
length(reqs.split$read.group.nbytes.sd$nbytes)
length(reqs.split$read.group.nbytes.sd$nbytes)
(reqs.general.wlmod <- data.frame(
texecpercentage=round(reqs.general.texec.sum.texec * 100 / sum(reqs.general.texec.sum.texec), 2),
texec=round(reqs.general.texec.sum.texec, 2),
nbytesmean=round(reqs.group.nbytes.mean.nbytes, 1),
nbytessd=round(reqs.group.nbytes.sd.nbytes, 1),
tipo=reqs.group.tipo,
prop=reqs.general.prop)
)
reqs.general.km.size = c(reqs.split$read.km$size, reqs.split$write.km$size)
reqs.general.prop <- reqs.general.km.size/sum(reqs.general.km.size)
reqs.general.texec.sum.texec = c(reqs.split$read.group.texec.sum$texec, reqs.split$write.group.texec.sum$texec)
reqs.group.nbytes.mean.nbytes = c(reqs.split$read.group.nbytes.mean$nbytes, reqs.split$write.group.nbytes.mean$nbytes)
reqs.group.nbytes.sd.nbytes = c(reqs.split$read.group.nbytes.sd$nbytes, reqs.split$write.group.nbytes.sd$nbytes)
reqs.group.tipo=c(rep("Leitura", length(reqs.split$read.group.nbytes.sd$nbytes)), rep("Escrita", length(reqs.split$write.group.nbytes.sd$nbytes)))
(reqs.general.wlmod <- data.frame(
texecpercentage=round(reqs.general.texec.sum.texec * 100 / sum(reqs.general.texec.sum.texec), 2),
texec=round(reqs.general.texec.sum.texec, 2),
nbytesmean=round(reqs.group.nbytes.mean.nbytes, 1),
nbytessd=round(reqs.group.nbytes.sd.nbytes, 1),
tipo=reqs.group.tipo,
prop=reqs.general.prop)
)
knitr::opts_chunk$set(echo = TRUE, out.width='70%', fig.align="center")
reqs <- read.table("wl-rdwr.dat", head=T)
str(reqs)
head(reqs)
reqs.diff = diff(reqs$tstamp)
head(reqs.diff)
str(reqs.diff)
#reqs$tstamp[1]
reqs$texec = c(reqs$tstamp[1], reqs.diff)
head(reqs)
tail(reqs)
#reqs.std <- scale(reqs[-1])
#reqs$diff = diff(reqs$tstamp)
#cbind(reqs, diff(reqs$tstamp))
reqs.split <- split(reqs, reqs$tipo)
str(reqs.split)
reqs.split$read$tipo = 1
reqs.split$read.std = scale(reqs.split$read[c('nbytes')])
reqs.split$write$tipo = 2
reqs.split$write.std = scale(reqs.split$write[c('nbytes')])
head(reqs.split$write)
head(reqs.split$write.std)
length(reqs.split$read)
length(reqs.split$write)
# Commented to avoid execute again
library(NbClust)
#reqs.split$read.nc = NbClust(reqs.split$read.std, min.nc=2, max.nc=7, method="kmeans")
#table(reqs.split$read.nc$Best.n[1,])
## *******************************************************************
## * Among all indices:
## * 1 proposed 2 as the best number of clusters
## * 5 proposed 4 as the best number of clusters
##
##                    ***** Conclusion *****
##
## * According to the majority rule, the best number of clusters is  4
##
##
## *******************************************************************
#reqs.split$write.nc = NbClust(reqs.split$write.std, min.nc=2, max.nc=7, method="kmeans")
#table(reqs.split$write.nc$Best.n[1,])
## *******************************************************************
## * Among all indices:
## * 5 proposed 3 as the best number of clusters
## * 1 proposed 7 as the best number of clusters
##
##                    ***** Conclusion *****
##
## * According to the majority rule, the best number of clusters is  3
##
##
## *******************************************************************
# K-means
set.seed(1130)
reqs.split$read.km <- kmeans(reqs.split$read.std, 4, nstart=25)
reqs.split$read.km$centers
str(reqs.split$read)
length(reqs.split$read$nbytes)
length(reqs.split$read.km$cluster)
head(reqs.split$read.km$cluster)
head(reqs.split$read)
#reqs.split$read.km$cluster
str(reqs.split$read)
head(reqs.split$read[c('nbytes', 'texec')])
head(reqs.split$read[3])
head(reqs.split$read[4])
(reqs.split$read.group.nbytes.mean <- aggregate(reqs.split$read[c('nbytes', 'texec')], by=list(cluster=reqs.split$read.km$cluster), mean))
reqs.split$read.group.nbytes.sd <- aggregate(reqs.split$read[c('nbytes')], by=list(cluster=reqs.split$read.km$cluster), sd)
reqs.split$read.group.texec.sum <- aggregate(reqs.split$read[c('texec')], by=list(cluster=reqs.split$read.km$cluster), sum)
table(reqs.split$read.km$cluster)
reqs.split$write.km <- kmeans(reqs.split$write.std, 3, nstart=25)
(reqs.split$write.group.nbytes.mean <- aggregate(reqs.split$write[c('nbytes', 'texec')], by=list(cluster=reqs.split$write.km$cluster), mean))
reqs.split$write.group.nbytes.sd <- aggregate(reqs.split$write[c('nbytes')], by=list(cluster=reqs.split$write.km$cluster), sd)
reqs.split$write.group.texec.sum <- aggregate(reqs.split$write[c('texec')], by=list(cluster=reqs.split$write.km$cluster), sum)
table(reqs.split$write.km$cluster)
reqs.split$write.group.texec.sum$texec
# Modelo da carga de trabalho
reqs.split$read.prop <- reqs.split$read.km$size/sum(reqs.split$read.km$size)
#sum()
(reqs.split$read.wlmod <- data.frame(
texecpercentage=round(reqs.split$read.group.texec.sum$texec * 100 / sum(reqs.split$read.group.texec.sum$texec), 2),
texec=round(reqs.split$read.group.nbytes.mean$texec, 2),
nbytes=round(reqs.split$read.group.nbytes.mean$nbytes, 1),
prop=reqs.split$read.prop)
)
reqs.split$read.wlmod$prop = round(reqs.split$read.wlmod$prop * 100, 2)
head(reqs.split$read.wlmod)
reqs.split$read.wlmod.print.i = data.frame(
'Número de bytes Lidos'=reqs.split$read.wlmod$nbytes,
"Frequência%"=reqs.split$read.wlmod$prop
)
reqs.split$read.wlmod.print.ii = data.frame(
'Porcentagem do Tempo de Execução do Grupo'=reqs.split$read.wlmod$texecpercentage,
'Média Tempo de Execução (ms)'=reqs.split$read.wlmod$texec,
'Número de bytes Lidos'=reqs.split$read.wlmod$nbytes,
"Frequência%"=reqs.split$read.wlmod$prop
)
reqs.split$write.prop <- reqs.split$write.km$size/sum(reqs.split$write.km$size)
(reqs.split$write.wlmod <- data.frame(
texecpercentage=round(reqs.split$write.group.texec.sum$texec * 100 / sum(reqs.split$write.group.texec.sum$texec), 2),
texec=round(reqs.split$write.group.nbytes.mean$texec, 2),
nbytes=round(reqs.split$write.group.nbytes.mean$nbytes, 1),
prop=reqs.split$write.prop)
)
reqs.split$write.wlmod$prop = round(reqs.split$write.wlmod$prop * 100, 2)
#reqs.split$write.wlmod
#print(reqs.split$write.wlmod, quote = FALSE, row.names = FALSE, column.names=c('tao', 'tao'))
reqs.split$write.wlmod.print.i = data.frame(
'Número de bytes Escritos'=reqs.split$write.wlmod$nbytes,
"Frequência%"=reqs.split$write.wlmod$prop
)
reqs.split$write.wlmod.print.ii = data.frame(
'Porcentagem do Tempo de Execução do Grupo'=reqs.split$write.wlmod$texecpercentage,
'Média Tempo de Execução (ms)'=reqs.split$write.wlmod$texec,
'Número de Bytes Escritos'=reqs.split$write.wlmod$nbytes,
"Frequência%"=reqs.split$write.wlmod$prop
)
reqs.general.km.size = c(reqs.split$read.km$size, reqs.split$write.km$size)
reqs.general.prop <- reqs.general.km.size/sum(reqs.general.km.size)
reqs.general.texec.sum.texec = c(reqs.split$read.group.texec.sum$texec, reqs.split$write.group.texec.sum$texec)
reqs.group.nbytes.mean.nbytes = c(reqs.split$read.group.nbytes.mean$nbytes, reqs.split$write.group.nbytes.mean$nbytes)
reqs.group.nbytes.sd.nbytes = c(reqs.split$read.group.nbytes.sd$nbytes, reqs.split$write.group.nbytes.sd$nbytes)
reqs.group.tipo=c(rep("Leitura", length(reqs.split$read.group.nbytes.sd$nbytes)), rep("Escrita", length(reqs.split$write.group.nbytes.sd$nbytes)))
(reqs.general.wlmod <- data.frame(
texecpercentage=round(reqs.general.texec.sum.texec * 100 / sum(reqs.general.texec.sum.texec), 2),
texec=round(reqs.general.texec.sum.texec, 2),
nbytesmean=round(reqs.group.nbytes.mean.nbytes, 1),
nbytessd=round(reqs.group.nbytes.sd.nbytes, 1),
tipo=reqs.group.tipo,
prop=reqs.general.prop)
)
length(reqs.split$read.group.nbytes.sd$nbytes)
reqs.general.wlmod$prop = round(reqs.general.wlmod$prop * 100, 2)
reqs.general.print.iii = data.frame(
'Classe'=seq(7),
'Frequência (%)'=reqs.general.wlmod$prop,
'Tipo'=reqs.general.wlmod$tipo,
'Número de Bytes Média'=reqs.general.wlmod$nbytesmean,
'Número de Bytes Desvio'=reqs.general.wlmod$nbytessd,
"Porcentagem do Tempo de Execução"=reqs.general.wlmod$texecpercentage
)
library(lemon)
#knit_print.data.frame <- lemon_print
reqs.general.wlmod$prop
m(reqs.general.wlmod$prop )
sum(reqs.general.wlmod$prop )
