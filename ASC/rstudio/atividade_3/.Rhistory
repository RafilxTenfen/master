rand171(4)
rand171()
## [1] 5.080091
qnorm(0-.95)
qnorm(0.95)
qnorm(0.975)
qnorm(0.97)
qnorm(0.95)
qnorm(0.97)
qnorm(1)
qnorm(0.96)
qnorm(0.97)
qnorm(0.98)
qnorm(0.97)
qnorm(0.975)
qnorm(0.973)
qnorm(0.971)
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
1 - alfa/2
ic <- 0.9
alfa <- 1 - ic
1 - alfa/2
ic <- 0.95
alfa <- 1 - ic
1 - alfa/2
ic <- 0.9
alfa <- 1 - ic
1 - alfa/2
qnorm
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
p <- 1 - alfa/2
z <- qnorm(p)
z
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 33
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 33
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
source("rand171.R")         # carrega arquivo que contem a funcao
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 33
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
randData
xbar <- mean(randData)
s <- sd(randData)
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
p <- 1 - alfa/2
z <- qnorm(p)
nest <- (z*s/(e*xbar))^2
nestCeil <- ceiling(nest)
nestCeil
# código para analisar os dados da questão 1 aqui
xbar <- mean(randData)
s <- sd(randData)
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
p <- 1 - alfa/2
z <- qnorm(p)
nest <- (z*s/(e*xbar))^2
nestCeil <- ceiling(nest)
nestCeil
# código para analisar os dados da questão 1 aqui
xbar <- mean(randData)
s <- sd(randData)
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
p <- 1 - alfa/2
z <- qnorm(p)
nest <- (z*s/(e*xbar))^2
nestCeil <- ceiling(nest)
nestCeil
# código para analisar os dados da questão 1 aqui
xbar <- mean(randData)
s <- sd(randData)
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
p <- 1 - alfa/2
z <- qnorm(p)
nest <- (z*s/(e*xbar))^2
nestCeil <- ceiling(nest)
nestCeil
# código para analisar os dados da questão 1 aqui
xbar <- mean(randData)
s <- sd(randData)
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
p <- 1 - alfa/2
z <- qnorm(p)
nest <- (z*s/(e*xbar))^2
nestCeil <- ceiling(nest)
nestCeil
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 33
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
randData
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 33
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
randData
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 33
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
randData
dput
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 33
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
dput(randData)
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 33
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
dput(randData)
# código para analisar os dados da questão 1 aqui
xbar <- mean(randData)
s <- sd(randData)
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
p <- 1 - alfa/2
z <- qnorm(p)
nest <- (z*s/(e*xbar))^2
nestCeil <- ceiling(nest)
nestCeil
# código para analisar os dados da questão 1 aqui
xbar <- mean(randData)
s <- sd(randData)
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
p <- 1 - alfa/2
z <- qnorm(p)
nest <- (z*s/(e*xbar))^2
nestCeil <- ceiling(nest)
nestCeil
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 33
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
dput(randData)
# código para recuperar os tempos de execução mensurados aqui
randData <- c()
noc3to5s <- 34
# generate 5 initial executions
for (i in 1:5) {
randData <- c(randData, rand171(noc3to5s))
}
dput(randData)
# código para analisar os dados da questão 1 aqui
xbar <- mean(randData)
s <- sd(randData)
e <- 0.06
ic <- 0.95
alfa <- 1 - ic
p <- 1 - alfa/2
z <- qnorm(p)
nest <- (z*s/(e*xbar))^2
nestCeil <- ceiling(nest)
nestCeil
randData
write.table(df, "randData5-rand171.dat", row.names = FALSE, quote = FALSE)
df <- data.frame(randData)
write.table(df, "randData5-rand171.dat", row.names = FALSE, quote = FALSE)
