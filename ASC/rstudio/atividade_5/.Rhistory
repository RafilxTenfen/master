1 - 0.95
(1 - 0.95) > 0.03911
0.03911 > (1 - 0.95)
0.03911 < (1 - 0.95)
0.03911 < (1 - 0.99)
python3 fibo.py 100 200 25 2
ls
ls
pwd
1200000 - 1000000
(1200000 - 1000000) / 1000
(1200000 - 1000000) / 5000
1000000 - 120000
(1000000 - 120000) / 10000
2.2e-16
2.2e-16 < 0.01
knitr::opts_chunk$set(echo = TRUE, out.width='70%', fig.align="center")
# seu cÃ³digo R aqui
part3 <- read.table("part3.dat", header = TRUE)
lmp3 = lm(tempo ~ n, part3)
(lmp3.summary = summary(lmp3))
lmp3.summary.intercept
lmp3.summary
lmp3.summary.estimate
lmp3.summary.attr
lmp3.summary.terms
lmp3.summary.residuals
lmp3.summary$residuals
lmp3.summary$intercept
lmp3.summary$estimate
lmp3.summary$terms
lmp3.summary$terms$intercept
lmp3.summary$terms.intercept
lmp3.summary$fstatistic
lmp3.summary$Intercept
lmp3.summary$coefficients
lmp3.summary$coefficients$Estimate
lmp3.summary$coefficients
str(lmp3.summary$coefficients)
lmp3.summary$coefficients$Intercept
lmp3.summary$coefficients[0]
lmp3.summary$coefficients[1]
lmp3.summary$coefficients[1] == -1.712e-02
-1.712e-02
lmp3.summary$coefficients[1]
lmp3.summary$coefficients[2]
coef(lmp3)
lmp3.summary$coefficients[2] == coef(lmp3)[2]
lmp3.summary$coefficients[1] == coef(lmp3)[1]
120000 - 90000
120000 - 15000
120000 - 15000 - 90000
1000000 - 120000
120000 + (880000 / 3)
part3$n == 400000
which(part3$n == 400000)
part3[which(part3$n == 400000)]
part3[1]
part3[part3$n == 400000]
part3[n == 400000]
part3$n == 400000
part3[which(part3$n == 400000)]
which(part3$n == 400000)
part3[281]
part3$281
part3(281)
str(part3)
which(part3$n == 400000)
part3
part3$tempo[which(part3$n == 400000)]
round(lmp3.predict[2], 3)
part3$tempo[which(part3$n == 400000)]
part3$tempo[part3$n == 400000]
(tempo.400000 = part3$tempo[part3$n == 400000])
diff(tempo.400000, lmp3.predict[2])
(lmp3.predict = predict(lmp3, newdata = data.frame(n=c(100000, 400000, 800000, 1200000)), conf.level=0.95))
diff(tempo.400000, lmp3.predict[2])
(tempo.800000 = part3$tempo[part3$n == 800000])
lmp3.predict[3]
(tempo.800000 = part3$tempo[part3$n == 800000])[0] - lmp3.predict[3]
(tempo.800000 = part3$tempo[part3$n == 800000])[1] - lmp3.predict[3]
(tempo.800000 = part3$tempo[part3$n == 800000])[2] - lmp3.predict[3]
(tempo.800000 = part3$tempo[part3$n == 800000])[3] - lmp3.predict[3]
diff(tempo.400000, lmp3.predict[2])
tempo.400000 - lmp3.predict[2]
abs(tempo.400000 - lmp3.predict[2])
lmp3.predict[4]
(lmp3.summary$coefficients[1] - 23) / (lmp3.summary$coefficients[2])
(lmp3.summary$coefficients[1] - 23) / (-lmp3.summary$coefficients[2])
