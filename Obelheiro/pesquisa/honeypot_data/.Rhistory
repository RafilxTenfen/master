tempo_final=max(tempo_final_cast))
data_grouped_period_command
data
data$get_payload_value
data
data
data$payload
blob_to_string(data$payload)
library(dplyr)
blob_to_string(data$payload)
blob_to_string(data$payload)
library(dplyr.teradata)
library("dplyr.teradata")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library("dplyr.teradata")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
knitr::opts_chunk$set(echo = TRUE)
blob_to_string(data$payload)
library("dplyr.teradata")
remove.packages("dplyr")
remove.packages(dplyr)
library("dplyr")
remove.packages(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library('RSQLite')
library('ggplot2')
library(DBI)
options("scipen"=100, "digits"=4)
library("dplyr")
library(dplyr)
install.packages("dplyr")
blob_to_string(data$payload)
library("dplyr.teradata")
knitr::opts_chunk$set(echo = TRUE)
library('RSQLite')
library('ggplot2')
library(DBI)
options("scipen"=100, "digits"=4)
library("dplyr")
require(gridExtra)
library(tibble)
library(viridis)
library(lubridate)
library(blob)
#library("dplyr.teradata")
# library("dplyr.teradata")
db <- dbConnect(RSQLite::SQLite(), dbname="../db/database-2022-05-11/mix_protocol.sqlite")
data_unfetch <-dbSendQuery(db, "
SELECT *, CAST(CAST(year AS text) || CAST(period AS text) as integer) as year_period, SUBSTR(payload,0,25) AS payload_limit, memcached_request_type
FROM (
SELECT *,  strftime(\"%Y\", tempo_inicio) as year, ((strftime(\"%m\", tempo_final) - 1) / 3) + 1 AS period
FROM MEMCACHED_ANALYSIS
)
")
data <- fetch(data_unfetch)
data_memcached_payload_types_unfetch <-dbSendQuery(db, "
SELECT id, quantity, SUBSTR(payload,0,25) AS payload_limit
FROM MEMCACHED_PAYLOAD_TYPES
")
data_memcached_payload_types <- fetch(data_memcached_payload_types_unfetch)
dbDisconnect(db)
data['tempo_final_cast'] = as.POSIXct(data[['tempo_final']], format = "%Y-%m-%d %H:%M:%S")
data['tempo_inicio_cast'] = as.POSIXct(data[['tempo_inicio']], format = "%Y-%m-%d %H:%M:%S")
memcached_payload_types = data_memcached_payload_types %>%
mutate(payload_str = toString(payload_limit)) %>%
arrange(desc(quantity)) %>%
select('quantity', 'payload_limit', 'id')
memcached_payload_types_quantity_percentage = memcached_payload_types %>%
mutate(sum_quantity = sum(quantity)) %>%
mutate(quantity_percentage = (quantity / sum_quantity) * 100)
memcached_payload_types_quantity_percentage %>%
select('quantity', 'quantity_percentage', 'payload_limit') %>%
arrange(desc(quantity)) %>%
head(15)
memcached_payload_types_quantity_percentage %>%
arrange(desc(quantity)) %>%
filter(quantity > 0) %>%
select('quantity_percentage', 'payload_limit') %>%
ggplot( aes(x=payload_limit, y=quantity_percentage)) +
geom_bar(stat="identity", width = 0.7, position="dodge") +
geom_text(aes(label = paste(round(quantity_percentage, 3), "%"),  vjust = -0.25)) +
scale_fill_viridis(discrete=TRUE, direction = -1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
ylab("Porcentagem") +
xlab("Comando") +
ggtitle("Porcentagem da quantidade de comandos memcached")
data_grouped_period_command = data %>%
mutate(year_period_int = year_period,
year_period = as.factor(year_period),
command = as.factor(memcached_request_type)) %>%
group_by(year_period, command) %>%
summarise(sum_requests_per_attack = sum(requests_per_attack),
number_of_attacks = n(),
tempo_inicio=min(tempo_inicio_cast),
tempo_final=max(tempo_final_cast))
data_grouped_period_command_percentage = data_grouped_period_command %>%
ungroup() %>%
group_by(year_period) %>%
summarise(command = command,
number_of_attacks = number_of_attacks,
tempo_inicio = tempo_inicio,
tempo_final = tempo_final,
sum_period_number_of_attacks = sum(number_of_attacks),
sum_period_requests_per_attack = sum(sum_requests_per_attack),
sum_requests_per_attack = sum_requests_per_attack) %>%
mutate(number_of_attacks_percentage = (number_of_attacks / sum_period_number_of_attacks) * 100,
number_of_requests_percentage = (sum_requests_per_attack / sum_period_requests_per_attack) * 100)
minimum_percentage_as_others = 1
decimals_digits = 1
data_grouped_period_command_others_percentage = data_grouped_period_command_percentage %>%
mutate(
command = case_when(
number_of_requests_percentage < minimum_percentage_as_others ~ "OUTROS",
TRUE ~ as.character(command)
)
) %>%
group_by(year_period, command) %>%
summarise(number_of_requests_percentage = sum(number_of_requests_percentage))
data_grouped_period_command_others_percentage %>%
ggplot( aes(x=command, y=number_of_requests_percentage, fill=command)) +
geom_bar(stat="identity", width = 0.5, position="dodge") +
geom_text(aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%"),  vjust = -0.25)) +
scale_fill_viridis(discrete=TRUE) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
facet_grid(~year_period) +
ylab("Porcentagem da quantidade de comandos") +
xlab("Período (Trimestre)") +
ggtitle("Comandos memcached 2020 ~ 2022")
data_grouped_period_command_others_percentage %>%
ggplot( aes(x=year_period, y=number_of_requests_percentage, fill=command)) +
geom_bar(stat="identity", width = 0.5) +
geom_text(aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%")), position = position_stack(vjust = 0.1)) +
scale_fill_viridis(discrete=TRUE) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ylab("Porcentagem da quantidade de comandos") +
xlab("Período (Trimestre)") +
ggtitle("Comandos memcached 2020 ~ 2022")
data_grouped_period_command_others_percentage %>%
ggplot( aes(x=year_period, y=number_of_requests_percentage, group=command)) +
geom_line(size=1.2, aes(color=command)) +
geom_point(color="red", size=3,  aes(color=command)) +
geom_text(
aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%")),
hjust = -0.03, nudge_x = 0.05, nudge_y = -1, angle = -10,
) +
scale_fill_viridis(discrete=TRUE) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
) +
ylab("Porcentagem da quantidade de comandos") +
xlab("Período (Trimestre)") +
ggtitle("Comandos memcached 2020 ~ 2022")
data$payload
blob_to_string(data$payload)
install.packages("dplyr")
install.packages("dplyr")
blob_to_string(data$payload)
knitr::opts_chunk$set(echo = TRUE)
db <- dbConnect(RSQLite::SQLite(), dbname="../db/database-2022-05-11/mix_protocol.sqlite")
data_unfetch <-dbSendQuery(db, "
SELECT *, UNICODE(payload) as payload_unicode,
CAST(CAST(year AS text) || CAST(period AS text) as integer) as year_period, SUBSTR(payload,0,25) AS payload_limit, memcached_request_type
FROM (
SELECT *,  strftime(\"%Y\", tempo_inicio) as year, ((strftime(\"%m\", tempo_final) - 1) / 3) + 1 AS period
FROM MEMCACHED_ANALYSIS
)
")
data <- fetch(data_unfetch)
data
data_unfetch <-dbSendQuery(db, "
SELECT *, UNICODE(payload) as payload_unicode, QUOTE(payload) as quote_payload,
CAST(CAST(year AS text) || CAST(period AS text) as integer) as year_period, SUBSTR(payload,0,25) AS payload_limit, memcached_request_type
FROM (
SELECT *,  strftime(\"%Y\", tempo_inicio) as year, ((strftime(\"%m\", tempo_final) - 1) / 3) + 1 AS period
FROM MEMCACHED_ANALYSIS
)
")
data <- fetch(data_unfetch)
data
data
data
data
data
data_grouped_period_payload = data %>%
mutate(year_period_int = year_period,
year_period = as.factor(year_period),
payload = as.factor(quote_payload)) %>%
group_by(year_period, payload) %>%
summarise(sum_requests_per_attack = sum(requests_per_attack),
number_of_attacks = n(),
tempo_inicio=min(tempo_inicio_cast),
tempo_final=max(tempo_final_cast))
library('RSQLite')
library('ggplot2')
library(DBI)
options("scipen"=100, "digits"=4)
library("dplyr")
require(gridExtra)
library(tibble)
library(viridis)
library(lubridate)
library(blob)
data_grouped_period_payload = data %>%
mutate(year_period_int = year_period,
year_period = as.factor(year_period),
payload = as.factor(quote_payload)) %>%
group_by(year_period, payload) %>%
summarise(sum_requests_per_attack = sum(requests_per_attack),
number_of_attacks = n(),
tempo_inicio=min(tempo_inicio_cast),
tempo_final=max(tempo_final_cast))
data
data %>%
mutate(year_period_int = year_period,
year_period = as.factor(year_period),
payload = as.factor(quote_payload))
data
data %>%
mutate(year_period_int = year_period,
year_period = as.factor(year_period),
payload = as.factor(quote_payload))
data %>%
mutate(year_period_int = year_period,
year_period = as.factor(year_period),
payload_fct = as.factor(quote_payload))
data %>%
mutate(year_period_int = year_period,
year_period = as.factor(year_period),
payload_fct = as.factor(quote_payload))
data %>%
mutate(year_period_int = year_period,
year_period = as.factor(year_period),
payload_factor = as.factor(quote_payload))
data
data %>%
mutate(year_period = as.factor(year_period),
payload_factor = as.factor(quote_payload))
data
data %>%
mutate(year_period = as.factor(year_period),
payload_factor = as.factor(quote_payload))
knitr::opts_chunk$set(echo = TRUE)
library('RSQLite')
library('ggplot2')
library(DBI)
options("scipen"=100, "digits"=4)
library("dplyr")
require(gridExtra)
library(tibble)
library(viridis)
library(lubridate)
library(blob)
#library("dplyr.teradata")
# library("dplyr.teradata")
db <- dbConnect(RSQLite::SQLite(), dbname="../db/database-2022-05-11/mix_protocol.sqlite")
data_unfetch <-dbSendQuery(db, "
SELECT *, QUOTE(payload) as quote_payload,
CAST(CAST(year AS text) || CAST(period AS text) as integer) as year_period, SUBSTR(payload,0,25) AS payload_limit, memcached_request_type
FROM (
SELECT *,  strftime(\"%Y\", tempo_inicio) as year, ((strftime(\"%m\", tempo_final) - 1) / 3) + 1 AS period
FROM MEMCACHED_ANALYSIS
)
")
data <- fetch(data_unfetch)
data_memcached_payload_types_unfetch <-dbSendQuery(db, "
SELECT id, quantity, SUBSTR(payload,0,25) AS payload_limit
FROM MEMCACHED_PAYLOAD_TYPES
")
data_memcached_payload_types <- fetch(data_memcached_payload_types_unfetch)
dbDisconnect(db)
data['tempo_final_cast'] = as.POSIXct(data[['tempo_final']], format = "%Y-%m-%d %H:%M:%S")
data['tempo_inicio_cast'] = as.POSIXct(data[['tempo_inicio']], format = "%Y-%m-%d %H:%M:%S")
memcached_payload_types = data_memcached_payload_types %>%
mutate(payload_str = toString(payload_limit)) %>%
arrange(desc(quantity)) %>%
select('quantity', 'payload_limit', 'id')
memcached_payload_types_quantity_percentage = memcached_payload_types %>%
mutate(sum_quantity = sum(quantity)) %>%
mutate(quantity_percentage = (quantity / sum_quantity) * 100)
memcached_payload_types_quantity_percentage %>%
select('quantity', 'quantity_percentage', 'payload_limit') %>%
arrange(desc(quantity)) %>%
head(15)
memcached_payload_types_quantity_percentage %>%
arrange(desc(quantity)) %>%
filter(quantity > 0) %>%
select('quantity_percentage', 'payload_limit') %>%
ggplot( aes(x=payload_limit, y=quantity_percentage)) +
geom_bar(stat="identity", width = 0.7, position="dodge") +
geom_text(aes(label = paste(round(quantity_percentage, 3), "%"),  vjust = -0.25)) +
scale_fill_viridis(discrete=TRUE, direction = -1) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
ylab("Porcentagem") +
xlab("Comando") +
ggtitle("Porcentagem da quantidade de comandos memcached")
data_grouped_period_command = data %>%
mutate(year_period_int = year_period,
year_period = as.factor(year_period),
command = as.factor(memcached_request_type)) %>%
group_by(year_period, command) %>%
summarise(sum_requests_per_attack = sum(requests_per_attack),
number_of_attacks = n(),
tempo_inicio=min(tempo_inicio_cast),
tempo_final=max(tempo_final_cast))
data_grouped_period_command_percentage = data_grouped_period_command %>%
ungroup() %>%
group_by(year_period) %>%
summarise(command = command,
number_of_attacks = number_of_attacks,
tempo_inicio = tempo_inicio,
tempo_final = tempo_final,
sum_period_number_of_attacks = sum(number_of_attacks),
sum_period_requests_per_attack = sum(sum_requests_per_attack),
sum_requests_per_attack = sum_requests_per_attack) %>%
mutate(number_of_attacks_percentage = (number_of_attacks / sum_period_number_of_attacks) * 100,
number_of_requests_percentage = (sum_requests_per_attack / sum_period_requests_per_attack) * 100)
minimum_percentage_as_others = 1
decimals_digits = 1
data_grouped_period_command_others_percentage = data_grouped_period_command_percentage %>%
mutate(
command = case_when(
number_of_requests_percentage < minimum_percentage_as_others ~ "OUTROS",
TRUE ~ as.character(command)
)
) %>%
group_by(year_period, command) %>%
summarise(number_of_requests_percentage = sum(number_of_requests_percentage))
data_grouped_period_command_others_percentage %>%
ggplot( aes(x=command, y=number_of_requests_percentage, fill=command)) +
geom_bar(stat="identity", width = 0.5, position="dodge") +
geom_text(aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%"),  vjust = -0.25)) +
scale_fill_viridis(discrete=TRUE) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
facet_grid(~year_period) +
ylab("Porcentagem da quantidade de comandos") +
xlab("Período (Trimestre)") +
ggtitle("Comandos memcached 2020 ~ 2022")
data_grouped_period_command_others_percentage %>%
ggplot( aes(x=year_period, y=number_of_requests_percentage, fill=command)) +
geom_bar(stat="identity", width = 0.5) +
geom_text(aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%")), position = position_stack(vjust = 0.1)) +
scale_fill_viridis(discrete=TRUE) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ylab("Porcentagem da quantidade de comandos") +
xlab("Período (Trimestre)") +
ggtitle("Comandos memcached 2020 ~ 2022")
data_grouped_period_command_others_percentage %>%
ggplot( aes(x=year_period, y=number_of_requests_percentage, group=command)) +
geom_line(size=1.2, aes(color=command)) +
geom_point(color="red", size=3,  aes(color=command)) +
geom_text(
aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%")),
hjust = -0.03, nudge_x = 0.05, nudge_y = -1, angle = -10,
) +
scale_fill_viridis(discrete=TRUE) +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
) +
ylab("Porcentagem da quantidade de comandos") +
xlab("Período (Trimestre)") +
ggtitle("Comandos memcached 2020 ~ 2022")
#
# data_grouped_period_payload = data %>%
#   mutate(year_period = as.factor(year_period),
#          payload_factor = as.factor(quote_payload)) %>%
#   group_by(year_period, payload) %>%
#   summarise(sum_requests_per_attack = sum(requests_per_attack),
#             number_of_attacks = n(),
#             tempo_inicio=min(tempo_inicio_cast),
#             tempo_final=max(tempo_final_cast))
#
# data_grouped_period_command_percentage = data_grouped_period_command %>%
#   ungroup() %>%
#   group_by(year_period) %>%
#   summarise(command = command,
#             number_of_attacks = number_of_attacks,
#             tempo_inicio = tempo_inicio,
#             tempo_final = tempo_final,
#             sum_period_number_of_attacks = sum(number_of_attacks),
#             sum_period_requests_per_attack = sum(sum_requests_per_attack),
#             sum_requests_per_attack = sum_requests_per_attack) %>%
#   mutate(number_of_attacks_percentage = (number_of_attacks / sum_period_number_of_attacks) * 100,
#          number_of_requests_percentage = (sum_requests_per_attack / sum_period_requests_per_attack) * 100)
#
#
# minimum_percentage_as_others = 1
# decimals_digits = 1
#
# data_grouped_period_command_others_percentage = data_grouped_period_command_percentage %>%
#   mutate(
#     command = case_when(
#       number_of_requests_percentage < minimum_percentage_as_others ~ "OUTROS",
#       TRUE ~ as.character(command)
#     )
#   ) %>%
#   group_by(year_period, command) %>%
#   summarise(number_of_requests_percentage = sum(number_of_requests_percentage))
data_grouped_period_payload = data %>%
mutate(year_period = as.factor(year_period),
payload_factor = as.factor(quote_payload)) %>%
group_by(year_period, payload) %>%
summarise(sum_requests_per_attack = sum(requests_per_attack),
number_of_attacks = n(),
tempo_inicio=min(tempo_inicio_cast),
tempo_final=max(tempo_final_cast))
data %>%
mutate(year_period = as.factor(year_period),
payload_factor = as.factor(quote_payload))
data %>%
mutate(year_period = as.factor(year_period),
payload_factor = as.factor(quote_payload)) %>%
group_by(year_period, payload_factor)
data_grouped_period_payload = data %>%
mutate(year_period = as.factor(year_period),
payload_factor = as.factor(quote_payload)) %>%
group_by(year_period, payload_factor) %>%
summarise(sum_requests_per_attack = sum(requests_per_attack),
number_of_attacks = n(),
tempo_inicio=min(tempo_inicio_cast),
tempo_final=max(tempo_final_cast))
data_grouped_period_command
data %>%
mutate(year_period = as.factor(year_period),
payload = as.factor(quote_payload))
data_grouped_period_payload = data %>%
mutate(year_period = as.factor(year_period),
payload = as.factor(quote_payload)) %>%
group_by(year_period, payload) %>%
summarise(sum_requests_per_attack = sum(requests_per_attack),
number_of_attacks = n(),
tempo_inicio=min(tempo_inicio_cast),
tempo_final=max(tempo_final_cast))
data_grouped_period_payload_percentage = data_grouped_period_payload %>%
ungroup() %>%
group_by(year_period) %>%
summarise(payload = payload,
number_of_attacks = number_of_attacks,
tempo_inicio = tempo_inicio,
tempo_final = tempo_final,
sum_period_number_of_attacks = sum(number_of_attacks),
sum_period_requests_per_attack = sum(sum_requests_per_attack),
sum_requests_per_attack = sum_requests_per_attack) %>%
mutate(number_of_attacks_percentage = (number_of_attacks / sum_period_number_of_attacks) * 100,
number_of_requests_percentage = (sum_requests_per_attack / sum_period_requests_per_attack) * 100)
data_grouped_period_payload_others_percentage = data_grouped_period_payload_percentage %>%
mutate(
payload = case_when(
number_of_requests_percentage < minimum_percentage_as_others ~ "OUTROS",
TRUE ~ as.character(payload)
)
) %>%
group_by(year_period, payload) %>%
summarise(number_of_requests_percentage = sum(number_of_requests_percentage))
data_grouped_period_payload_others_percentage
data_grouped_period_payload_others_percentage %>%
ggplot( aes(x=payload, y=number_of_requests_percentage, fill=command)) +
geom_bar(stat="identity", width = 0.5, position="dodge") +
geom_text(aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%"),  vjust = -0.25)) +
scale_fill_viridis(discrete=TRUE) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
facet_grid(~year_period) +
ylab("Porcentagem da quantidade de payloads") +
xlab("Período (Trimestre)") +
ggtitle("Payloads memcached 2020 ~ 2022")
data_grouped_period_payload_others_percentage %>%
ggplot( aes(x=payload, y=number_of_requests_percentage, fill=payload)) +
geom_bar(stat="identity", width = 0.5, position="dodge") +
geom_text(aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%"),  vjust = -0.25)) +
scale_fill_viridis(discrete=TRUE) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
facet_grid(~year_period) +
ylab("Porcentagem da quantidade de payloads") +
xlab("Período (Trimestre)") +
ggtitle("Payloads memcached 2020 ~ 2022")
data_grouped_period_payload_others_percentage %>%
ggplot( aes(x=payload, y=number_of_requests_percentage, fill=payload)) +
geom_bar(stat="identity", width = 0.5, position="dodge") +
geom_text(aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%"),  vjust = -0.25)) +
scale_fill_viridis(discrete=TRUE) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
facet_grid(~year_period) +
ylab("Porcentagem da quantidade de payloads") +
xlab("Período (Trimestre)") +
ggtitle("Payloads memcached 2020 ~ 2022")
data_grouped_period_payload_others_percentage %>%
ggplot( aes(x=payload, y=number_of_requests_percentage)) +
geom_bar(stat="identity", width = 0.5, position="dodge") +
geom_text(aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%"),  vjust = -0.25)) +
scale_fill_viridis(discrete=TRUE) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
facet_grid(~year_period) +
ylab("Porcentagem da quantidade de payloads") +
xlab("Período (Trimestre)") +
ggtitle("Payloads memcached 2020 ~ 2022")
, fill=payload
data_grouped_period_payload_others_percentage %>%
ggplot( aes(x=payload, y=number_of_requests_percentage, fill=payload)) +
geom_bar(stat="identity", width = 0.5, position="dodge") +
geom_text(aes(label = paste(round(number_of_requests_percentage, decimals_digits), "%"),  vjust = -0.25)) +
scale_fill_viridis(discrete=TRUE) +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
facet_grid(~year_period) +
ylab("Porcentagem da quantidade de payloads") +
xlab("Período (Trimestre)") +
ggtitle("Payloads memcached 2020 ~ 2022")
