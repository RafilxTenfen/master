facet_grid(~year_period) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("QTYPES > 1% by period - ungrouped bars")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(quantity_percentage > 1) %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=reorder(qtype, -quantity_percentage), y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", position="dodge") +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), vjust = -0.25) +
facet_grid(~year_period) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("QTYPES > 1% by period - ungrouped bars")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=year_period, y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", width = 0.5) +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), position = position_stack(vjust = 0.1)) +
#scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("All QTYPES - stacked bars")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=reorder(qtype, -quantity_percentage), y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_viridis(discrete=TRUE, name="") +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), vjust = +0.25, ) +
facet_grid(~year_period) +
ylab("Percentage of attacks") +
ggtitle("All QTYPES - ungrouped bar")
library('RSQLite')
library('ggplot2')
library(DBI)
options("scipen"=100, "digits"=4)
db <- dbConnect(RSQLite::SQLite(), dbname="./dnstor_statistics_dns.sqlite")
dns_data <-dbSendQuery(db, "
SELECT count(*) as countGrouped, year, period, CAST(CAST(year AS text) || CAST(period AS text) as integer) as year_period , qname, qtype, SUM(count) as quantity
FROM DNS_ANALYSIS
WHERE QTYPE != 0
GROUP BY year_period, year, period, qname, qtype
ORDER BY quantity DESC;
")
dns_data_fetched <- fetch(dns_data)
#dns_data_fetched %>%
# filter(qtype == 0)
library(dplyr)
library(tibble)
dns_data.year_period.ungrouped <- group_split(dns_data_fetched, year_period)
N = 10
dns_data.topNconsultas <- head(dns_data.year_period.ungrouped[[1]], N)
dns_data.year_period.ungrouped.len = length(dns_data.year_period.ungrouped)
for (i in c(2:dns_data.year_period.ungrouped.len)) {
dns_data.topNconsultas <- rbind(dns_data.topNconsultas, head(dns_data.year_period.ungrouped[[i]], N))
}
select(dns_data.topNconsultas, c('year_period', 'qtype', 'quantity', 'qname'))
## ------------ Quantos ataques com cada tipo de qtype foi utilizado, por trimestre ? ------------
#dns_data_fetched
dns_data_fetched.quarter_type_quantity = select(dns_data_fetched, c('year_period', 'qtype', 'quantity'))
#dns_data_fetched.quarter_type_count = select(dns_data_fetched, c('year_period', 'qtype', 'countGrouped'))
#dns_data_fetched.quarter_type_count
#dns_data_fetched.quarter_type_quantity
#typeof(dns_data_fetched$year_period)
#dns_data_fetched$year_period
#dns_data_fetched.quarter_type_quantity[order(dns_data_fetched.quarter_type_quantity$year_period),]
#dns_data_fetched.quarter_type_count.grouped_qtype_period = dns_data_fetched.quarter_type_count %>%
#  group_by(qtype, year_period) %>%
#  summarise(count = sum(countGrouped))
dns_data_fetched.sum_attacks_quarterly = dns_data_fetched.quarter_type_quantity %>%
group_by(qtype, year_period) %>%
summarise(quantity = sum(quantity))
#dns_data_fetched.sum_attacks_quarterly[order(-dns_data_fetched.sum_attacks_quarterly$quantity, dns_data_fetched.sum_attacks_quarterly$year_period),]
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity, color = qtype)) +
geom_line()
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity)) +
geom_line() +
facet_wrap(facets = vars(qtype))
dns_data_fetched.sum_attacks_quarterly %>%
filter(qtype != "ANY") %>%
ggplot(aes(x = year_period, y = quantity)) +
geom_line() +
facet_wrap(facets = vars(qtype))
# ------------------------------------------- quantity with percentage
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity = dns_data_fetched.sum_attacks_quarterly %>%
group_by(year_period) %>%
summarise(sum_period_quantity = sum(quantity), qtype=qtype, quantity=quantity)
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity['quantity_percentage'] = (dns_data_fetched.sum_attacks_quarterly.sum_period_quantity$quantity * 100) / dns_data_fetched.sum_attacks_quarterly.sum_period_quantity$sum_period_quantity
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity %>%
ggplot(aes(x = year_period, y = quantity_percentage)) +
geom_line() +
facet_wrap(facets = vars(qtype))
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity %>%
filter(qtype != "ANY") %>%
ggplot(aes(x = year_period, y = quantity_percentage)) +
geom_line() +
facet_wrap(facets = vars(qtype))
# ------------------------------------------- filter any
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any = dns_data_fetched.sum_attacks_quarterly %>%
group_by(year_period) %>%
filter(qtype != "ANY") %>%
summarise(sum_period_quantity = sum(quantity), qtype=qtype, quantity=quantity)
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any['quantity_percentage'] = (dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any$quantity * 100) / dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any$sum_period_quantity
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any %>%
ggplot(aes(x = year_period, y = quantity_percentage)) +
geom_line() +
facet_wrap(facets = vars(qtype))
# Tiago
# - A e MX devem ser olhados junto com o ANY pra ver se existe alguma relação com esse crescimento
# - RRSIG tem um pico legal (descobrir qual ataque/relação pra tentar entender seria interessante)
# - todos os outros qtype deveriam ser gerados em outro grafico pra ver se o padrão d RRSIG n aparece tbm
# ------------ Quantos qtypes novos aprecem em cada trimestre ------------
# > Diferenças percentuais são mais relevantes que absolutas
quarter_qtype_aux = dns_data.year_period.ungrouped[[1]] %>%
group_by(qtype) %>%
summarise(quantity = sum(quantity))
#quarter_qtype_2 = dns_data.year_period.ungrouped[[2]] %>%
#  group_by(qtype) %>%
#  summarise(quantity = sum(quantity))
#quarter_qtype_2
#merged = merge(x = quarter_qtype_aux, y = quarter_qtype_2, by = "qtype", all = TRUE)
#merged.new_quantity = merged$quantity.x - merged$quantity.y
#merged
quarter_new_qtype = data.frame()
for (i in c(2:dns_data.year_period.ungrouped.len)) {
quarter_qtype = dns_data.year_period.ungrouped[[i]] %>%
group_by(qtype) %>%
summarise(quantity = sum(quantity))
merged = merge(x = quarter_qtype_aux, y = quarter_qtype, by = "qtype", all = TRUE)
merged.new_quantity = merged$quantity.x - merged$quantity.y
perio_to_period = paste(head(dns_data.year_period.ungrouped[[i - 1]]['year'], 1), '.',  head(dns_data.year_period.ungrouped[[i - 1]]['period'], 1), '->' , head(dns_data.year_period.ungrouped[[i]]['year'], 1), '.', head(dns_data.year_period.ungrouped[[i]]['period'], 1))
quarter_new_qtype <- rbind(quarter_new_qtype, data.frame(quarter_to_quarter=perio_to_period, merged$qtype, sum_quantity=merged$quantity.y - merged$quantity.x, quantity_percentage=(((merged$quantity.y - merged$quantity.x)*100)/merged$quantity.x), merged$quantity.x, merged$quantity.y))
quarter_qtype_aux = quarter_qtype
}
#quarter_new_qtype
head(na.omit(quarter_new_qtype[order(-quarter_new_qtype$quantity_percentage),]))
# ------------ Quantos qname novos aprecem em cada trimestre ------------
quarter_qname_aux = dns_data.year_period.ungrouped[[1]] %>%
group_by(qname) %>%
summarise(quantity = sum(quantity))
quarter_new_qname = data.frame()
for (i in c(2:dns_data.year_period.ungrouped.len)) {
quarter_qname = dns_data.year_period.ungrouped[[i]] %>%
group_by(qname) %>%
summarise(quantity = sum(quantity))
merged = merge(x = quarter_qname_aux, y = quarter_qname, by = "qname", all = TRUE)
merged.new_quantity = merged$quantity.x - merged$quantity.y
period_to_period = paste(head(dns_data.year_period.ungrouped[[i - 1]]['year'], 1), '.',  head(dns_data.year_period.ungrouped[[i - 1]]['period'], 1), '->' , ... = head(dns_data.year_period.ungrouped[[i]]['year'], 1), '.', head(dns_data.year_period.ungrouped[[i]]['period'], 1))
quarter_new_qname <- rbind(quarter_new_qname, data.frame(quarter_to_quarter=period_to_period, merged$qname, sum_quantity=(merged$quantity.y - merged$quantity.x), quantity_percentage_diff=(((merged$quantity.y - merged$quantity.x)*100)/merged$quantity.x), merged$quantity.x, merged$quantity.y))
quarter_qname_aux = quarter_qname
}
#quarter_new_qname
head(na.omit(quarter_new_qname[-order(quarter_new_qname$quantity_percentage_diff),]))
# @todo
#1- olhar a longo prazo, o timelapse dos qnames
#2- qual a frequencia d qnames novos nesses períodos
#   2.1 olhar em detalhes as variações dos qnames (pq geralmente eles acabam sendo um grupo)
# Vale um gráfico de barras (dois, um agrupado e outro empilhado) da porcentagem de QTYPEs por período
# https://www.data-to-viz.com/graph/barplot.html
# Libraries
library(viridis)
dns_data_fetched.sum_attacks_quarterly.sum_period = dns_data_fetched.sum_attacks_quarterly %>%
group_by(year_period) %>%
summarise(period_quantity = sum(quantity), qtype=qtype, quantity=quantity)
dns_data_fetched.sum_attacks_quarterly.sum_period['quantity_percentage'] = (dns_data_fetched.sum_attacks_quarterly.sum_period$quantity * 100) / dns_data_fetched.sum_attacks_quarterly.sum_period$period_quantity
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=reorder(qtype, -quantity_percentage), y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_viridis(discrete=TRUE, name="") +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), vjust = +0.25, ) +
facet_grid(~year_period) +
ylab("Percentage of attacks") +
ggtitle("All QTYPES - ungrouped bar")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=year_period, y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", width = 0.5) +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), position = position_stack(vjust = 0.1)) +
#scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("All QTYPES - stacked bars")
## Filter data using qtype quantity percentage bigger than 1
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(quantity_percentage > 1) %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=reorder(qtype, -quantity_percentage), y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", position="dodge") +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), vjust = -0.25) +
facet_grid(~year_period) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("QTYPES > 1% by period - ungrouped bars")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(quantity_percentage > 1) %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=year_period, y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", width = 0.5) +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), position = position_stack(vjust = 0.1)) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("QTYPES > 1% by period - stacked bars")
#dns_data_fetched.sum_attacks_quarterly.sum_period
dns_data_fetched.sum_attacks_quarterly.sum_period.relevant = dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(quantity_percentage > 1)
#dns_data_fetched.sum_attacks_quarterly.sum_period.relevant$qtype
qtypes_bigger_1 = dns_data_fetched.sum_attacks_quarterly.sum_period.relevant$qtype[!duplicated(dns_data_fetched.sum_attacks_quarterly.sum_period.relevant$qtype)]
#qtypes_bigger_1
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(qtype %in% qtypes_bigger_1) %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=year_period, y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", width = 0.5) +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), position = position_stack(vjust = 0.1)) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("Any QTYPE > 1% - stacked bars")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(qtype %in% qtypes_bigger_1) %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=reorder(qtype, -quantity_percentage), y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", position="dodge") +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), vjust = -0.25) +
facet_grid(~year_period) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("Any QTYPE > 1% - ungrouped bars")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=year_period, y=period_quantity)) +
geom_bar(stat="identity", width = 0.5) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Quantity of attacks") +
ggtitle("Attacks by period")
# if each line on db were a request
#dns_data_fetched.quarter_type_count.grouped_qtype_period %>%
#  mutate(year_period=as.factor(year_period)) %>%
#  ggplot( aes(x=year_period, y=count)) +
#    geom_bar(stat="identity", width = 0.5) +
#    scale_fill_viridis(discrete=TRUE, name="") +
#    ylab("Quantity of request") +
#    ggtitle("Request by period")
table(select(dns_data.topNconsultas, c('year_period', 'qtype', 'quantity', 'qname')))
print(select(dns_data.topNconsultas, c('year_period', 'qtype', 'quantity', 'qname')))
print(select(dns_data.topNconsultas, c('year_period', 'qtype', 'quantity', 'qname')))
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity, color = qtype)) +
geom_line()
dns_data_fetched.sum_attacks_quarterly = dns_data_fetched.quarter_type_quantity %>%
mutate(year_period=as.factor(year_period)) %>%
group_by(qtype, year_period) %>%
summarise(quantity = sum(quantity))
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity, color = qtype)) +
mutate(year_period=as.factor(year_period)) %>%
geom_line()
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity, color = qtype)) +
mutate(year_period=as.factor(year_period))+
geom_line()
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity, color = qtype)) %>%
mutate(year_period=as.factor(year_period)) +
geom_line()
dns_data_fetched.sum_attacks_quarterly
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity, color = qtype)) %>%
mutate(year_period=as.factor(year_period)) +
geom_line()
dns_data_fetched.sum_attacks_quarterly %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity, color = qtype)) +
geom_line()
dns_data_fetched.sum_attacks_quarterly %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot(aes(x = year_period, y = quantity, color = qtype)) +
geom_line()
dns_data_fetched.sum_attacks_quarterly %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot(aes(x = year_period, y = quantity, color = qtype)) +
geom_line()
dns_data_fetched.sum_attacks_quarterly = dns_data_fetched.quarter_type_quantity %>%
group_by(qtype, year_period) %>%
summarise(quantity = sum(quantity))
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity, color = qtype)) +
geom_line()
dns_data_fetched.sum_attacks_quarterly %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot(aes(x = year_period, y = quantity, color = qtype)) +
geom_line()
dns_data_fetched.sum_attacks_quarterly %>%
#  mutate(year_period=as.factor(year_period)) %>%
ggplot(aes(x = year_period, y = quantity, color = qtype)) +
geom_line()
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity %>%
filter(qtype != "ANY") %>%
ggplot(aes(x = year_period, y = quantity_percentage)) +
geom_line() +
facet_wrap(facets = vars(qtype))
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity %>%
filter(qtype != "ANY") %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot(aes(x = year_period, y = quantity_percentage)) +
geom_line() +
facet_wrap(facets = vars(qtype))
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity %>%
filter(qtype != "ANY") %>%
ggplot(aes(x = year_period, y = quantity_percentage)) +
geom_line() +
facet_wrap(facets = vars(qtype))
library('RSQLite')
library('ggplot2')
library(DBI)
options("scipen"=100, "digits"=4)
db <- dbConnect(RSQLite::SQLite(), dbname="./dnstor_statistics_dns.sqlite")
dns_data <-dbSendQuery(db, "
SELECT count(*) as countGrouped, year, period, CAST(CAST(year AS text) || CAST(period AS text) as integer) as year_period , qname, qtype, SUM(count) as quantity
FROM DNS_ANALYSIS
WHERE QTYPE != 0
GROUP BY year_period, year, period, qname, qtype
ORDER BY quantity DESC;
")
dns_data_fetched <- fetch(dns_data)
#dns_data_fetched %>%
# filter(qtype == 0)
library(dplyr)
library(tibble)
dns_data.year_period.ungrouped <- group_split(dns_data_fetched, year_period)
N = 10
dns_data.topNconsultas <- head(dns_data.year_period.ungrouped[[1]], N)
dns_data.year_period.ungrouped.len = length(dns_data.year_period.ungrouped)
for (i in c(2:dns_data.year_period.ungrouped.len)) {
dns_data.topNconsultas <- rbind(dns_data.topNconsultas, head(dns_data.year_period.ungrouped[[i]], N))
}
print(select(dns_data.topNconsultas, c('year_period', 'qtype', 'quantity', 'qname')))
## ------------ Quantos ataques com cada tipo de qtype foi utilizado, por trimestre ? ------------
#dns_data_fetched
dns_data_fetched.quarter_type_quantity = select(dns_data_fetched, c('year_period', 'qtype', 'quantity'))
dns_data_fetched.sum_attacks_quarterly = dns_data_fetched.quarter_type_quantity %>%
group_by(qtype, year_period) %>%
summarise(quantity = sum(quantity))
dns_data_fetched.sum_attacks_quarterly %>%
#  mutate(year_period=as.factor(year_period)) %>%
ggplot(aes(x = year_period, y = quantity, color = qtype)) +
geom_line()
ggplot(data = dns_data_fetched.sum_attacks_quarterly, aes(x = year_period, y = quantity)) +
geom_line() +
facet_wrap(facets = vars(qtype))
dns_data_fetched.sum_attacks_quarterly %>%
filter(qtype != "ANY") %>%
ggplot(aes(x = year_period, y = quantity)) +
geom_line() +
facet_wrap(facets = vars(qtype))
# ------------------------------------------- quantity with percentage
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity = dns_data_fetched.sum_attacks_quarterly %>%
group_by(year_period) %>%
summarise(sum_period_quantity = sum(quantity), qtype=qtype, quantity=quantity)
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity['quantity_percentage'] = (dns_data_fetched.sum_attacks_quarterly.sum_period_quantity$quantity * 100) / dns_data_fetched.sum_attacks_quarterly.sum_period_quantity$sum_period_quantity
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity %>%
ggplot(aes(x = year_period, y = quantity_percentage)) +
geom_line() +
facet_wrap(facets = vars(qtype))
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity %>%
filter(qtype != "ANY") %>%
ggplot(aes(x = year_period, y = quantity_percentage)) +
geom_line() +
facet_wrap(facets = vars(qtype))
# ------------------------------------------- filter any
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any = dns_data_fetched.sum_attacks_quarterly %>%
group_by(year_period) %>%
filter(qtype != "ANY") %>%
summarise(sum_period_quantity = sum(quantity), qtype=qtype, quantity=quantity)
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any['quantity_percentage'] = (dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any$quantity * 100) / dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any$sum_period_quantity
dns_data_fetched.sum_attacks_quarterly.sum_period_quantity.filter_any %>%
ggplot(aes(x = year_period, y = quantity_percentage)) +
geom_line() +
facet_wrap(facets = vars(qtype))
# Tiago
# - A e MX devem ser olhados junto com o ANY pra ver se existe alguma relação com esse crescimento
# - RRSIG tem um pico legal (descobrir qual ataque/relação pra tentar entender seria interessante)
# - todos os outros qtype deveriam ser gerados em outro grafico pra ver se o padrão d RRSIG n aparece tbm
# ------------ Quantos qtypes novos aprecem em cada trimestre ------------
# > Diferenças percentuais são mais relevantes que absolutas
quarter_qtype_aux = dns_data.year_period.ungrouped[[1]] %>%
group_by(qtype) %>%
summarise(quantity = sum(quantity))
#quarter_qtype_2 = dns_data.year_period.ungrouped[[2]] %>%
#  group_by(qtype) %>%
#  summarise(quantity = sum(quantity))
#quarter_qtype_2
#merged = merge(x = quarter_qtype_aux, y = quarter_qtype_2, by = "qtype", all = TRUE)
#merged.new_quantity = merged$quantity.x - merged$quantity.y
#merged
quarter_new_qtype = data.frame()
for (i in c(2:dns_data.year_period.ungrouped.len)) {
quarter_qtype = dns_data.year_period.ungrouped[[i]] %>%
group_by(qtype) %>%
summarise(quantity = sum(quantity))
merged = merge(x = quarter_qtype_aux, y = quarter_qtype, by = "qtype", all = TRUE)
merged.new_quantity = merged$quantity.x - merged$quantity.y
perio_to_period = paste(head(dns_data.year_period.ungrouped[[i - 1]]['year'], 1), '.',  head(dns_data.year_period.ungrouped[[i - 1]]['period'], 1), '->' , head(dns_data.year_period.ungrouped[[i]]['year'], 1), '.', head(dns_data.year_period.ungrouped[[i]]['period'], 1))
quarter_new_qtype <- rbind(quarter_new_qtype, data.frame(quarter_to_quarter=perio_to_period, merged$qtype, sum_quantity=merged$quantity.y - merged$quantity.x, quantity_percentage=(((merged$quantity.y - merged$quantity.x)*100)/merged$quantity.x), merged$quantity.x, merged$quantity.y))
quarter_qtype_aux = quarter_qtype
}
#quarter_new_qtype
head(na.omit(quarter_new_qtype[order(-quarter_new_qtype$quantity_percentage),]))
# ------------ Quantos qname novos aprecem em cada trimestre ------------
quarter_qname_aux = dns_data.year_period.ungrouped[[1]] %>%
group_by(qname) %>%
summarise(quantity = sum(quantity))
quarter_new_qname = data.frame()
for (i in c(2:dns_data.year_period.ungrouped.len)) {
quarter_qname = dns_data.year_period.ungrouped[[i]] %>%
group_by(qname) %>%
summarise(quantity = sum(quantity))
merged = merge(x = quarter_qname_aux, y = quarter_qname, by = "qname", all = TRUE)
merged.new_quantity = merged$quantity.x - merged$quantity.y
period_to_period = paste(head(dns_data.year_period.ungrouped[[i - 1]]['year'], 1), '.',  head(dns_data.year_period.ungrouped[[i - 1]]['period'], 1), '->' , ... = head(dns_data.year_period.ungrouped[[i]]['year'], 1), '.', head(dns_data.year_period.ungrouped[[i]]['period'], 1))
quarter_new_qname <- rbind(quarter_new_qname, data.frame(quarter_to_quarter=period_to_period, merged$qname, sum_quantity=(merged$quantity.y - merged$quantity.x), quantity_percentage_diff=(((merged$quantity.y - merged$quantity.x)*100)/merged$quantity.x), merged$quantity.x, merged$quantity.y))
quarter_qname_aux = quarter_qname
}
#quarter_new_qname
head(na.omit(quarter_new_qname[-order(quarter_new_qname$quantity_percentage_diff),]))
# @todo
#1- olhar a longo prazo, o timelapse dos qnames
#2- qual a frequencia d qnames novos nesses períodos
#   2.1 olhar em detalhes as variações dos qnames (pq geralmente eles acabam sendo um grupo)
# Vale um gráfico de barras (dois, um agrupado e outro empilhado) da porcentagem de QTYPEs por período
# https://www.data-to-viz.com/graph/barplot.html
# Libraries
library(viridis)
dns_data_fetched.sum_attacks_quarterly.sum_period = dns_data_fetched.sum_attacks_quarterly %>%
group_by(year_period) %>%
summarise(period_quantity = sum(quantity), qtype=qtype, quantity=quantity)
dns_data_fetched.sum_attacks_quarterly.sum_period['quantity_percentage'] = (dns_data_fetched.sum_attacks_quarterly.sum_period$quantity * 100) / dns_data_fetched.sum_attacks_quarterly.sum_period$period_quantity
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=reorder(qtype, -quantity_percentage), y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_viridis(discrete=TRUE, name="") +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), vjust = +0.25, ) +
facet_grid(~year_period) +
ylab("Percentage of attacks") +
ggtitle("All QTYPES - ungrouped bar")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=year_period, y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", width = 0.5) +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), position = position_stack(vjust = 0.1)) +
#scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("All QTYPES - stacked bars")
## Filter data using qtype quantity percentage bigger than 1
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(quantity_percentage > 1) %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=reorder(qtype, -quantity_percentage), y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", position="dodge") +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), vjust = -0.25) +
facet_grid(~year_period) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("QTYPES > 1% by period - ungrouped bars")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(quantity_percentage > 1) %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=year_period, y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", width = 0.5) +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), position = position_stack(vjust = 0.1)) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("QTYPES > 1% by period - stacked bars")
#dns_data_fetched.sum_attacks_quarterly.sum_period
dns_data_fetched.sum_attacks_quarterly.sum_period.relevant = dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(quantity_percentage > 1)
#dns_data_fetched.sum_attacks_quarterly.sum_period.relevant$qtype
qtypes_bigger_1 = dns_data_fetched.sum_attacks_quarterly.sum_period.relevant$qtype[!duplicated(dns_data_fetched.sum_attacks_quarterly.sum_period.relevant$qtype)]
#qtypes_bigger_1
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(qtype %in% qtypes_bigger_1) %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=year_period, y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", width = 0.5) +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), position = position_stack(vjust = 0.1)) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("Any QTYPE > 1% - stacked bars")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
filter(qtype %in% qtypes_bigger_1) %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=reorder(qtype, -quantity_percentage), y=quantity_percentage, fill=qtype)) +
geom_bar(stat="identity", position="dodge") +
geom_text(aes(label = paste(round(quantity_percentage, 2), "%")), vjust = -0.25) +
facet_grid(~year_period) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Percentage of attacks") +
ggtitle("Any QTYPE > 1% - ungrouped bars")
dns_data_fetched.sum_attacks_quarterly.sum_period %>%
mutate(year_period=as.factor(year_period)) %>%
ggplot( aes(x=year_period, y=period_quantity)) +
geom_bar(stat="identity", width = 0.5) +
scale_fill_viridis(discrete=TRUE, name="") +
ylab("Quantity of attacks") +
ggtitle("Attacks by period")
# if each line on db were a request
#dns_data_fetched.quarter_type_count.grouped_qtype_period %>%
#  mutate(year_period=as.factor(year_period)) %>%
#  ggplot( aes(x=year_period, y=count)) +
#    geom_bar(stat="identity", width = 0.5) +
#    scale_fill_viridis(discrete=TRUE, name="") +
#    ylab("Quantity of request") +
#    ggtitle("Request by period")
print(select(dns_data.topNconsultas, c('year_period', 'qtype', 'quantity', 'qname')), nrow(length(dns_data.topNconsultas)))
length(dns_data.topNconsultas)
length(dns_data.topNconsultas$year_period)
print(select(dns_data.topNconsultas, c('year_period', 'qtype', 'quantity', 'qname')), nrow = length(dns_data.topNconsultas$year_period))
select(dns_data.topNconsultas, c('year_period', 'qtype', 'quantity', 'qname'))
dns_data.year_period.ungrouped.len
